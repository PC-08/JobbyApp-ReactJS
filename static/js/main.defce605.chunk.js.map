{"version":3,"sources":["components/LoginRoute/index.js","components/Header/index.js","components/HomeRoute/index.js","components/GetProfileDeatilsCard/index.js","components/JobItem/index.js","components/JobsRoute/index.js","components/JobItemDetailsRoute/index.js","components/ProtectedRoute/index.js","components/NotFoundRoute/index.js","App.js","index.js"],"names":["LoginRoute","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","userUserName","userPassword","iserror","errorMsg","onUserNameChange","event","setState","target","value","onUserPassChange","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onSubmitFailure","console","log","onClickLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","username","password","method","body","JSON","stringify","fetch","sent","json","ok","jwt_token","error_msg","stop","_x","apply","_inherits","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","className","children","_jsxs","alt","src","htmlFor","onChange","id","placeholder","type","onClick","Component","withRouter","onClickLogout","remove","Link","IoMdHome","BsBriefcaseFill","FiLogOut","HomeRoute","Header","apiConstants","GetProfileDeatilsCard","apiStatus","profileData","getProfileDetails","formattedProfileDetails","headers","Authorization","name","profile_details","profileImageUrl","profile_image_url","bio","short_bio","status","onClickRetryBtn","renderProfileLoadingView","Loader","color","height","width","renderProfileFailureView","renderProfileSuccessView","rederProfileData","JobItem","jobData","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","title","rating","IoMdStar","MdLocationOn","FaShoppingBag","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","GetEmploymentType","eachType","onCheckBoxReq","GetEmploymentSal","eachSaltype","onSalopReq","JobsRoute","jobsArray","empType","empSal","search","onClickRetryBtnJobs","getJobsData","url","formattedJobsArray","join","jobs","map","eachJob","company_logo_url","employment_type","job_description","package_per_annum","renderJobsSuccessView","getRenderView","renderJobsLoadingView","renderJobsFailureView","onClickSeacrButton","componentDidMount","opt","prevState","includes","filter","eacht","push","_this2","_Fragment","eachEmplType","onInputChange","BsSearch","GetSkill","eachSkill","image_url","GetSimilarJob","initialj","successj","failurej","loadingj","JobItemDetailsRoute","initial","jobItemData","similarJobs","lifeAtComapany","getJobItemData","match","params","job_details","similar_jobs","life_at_company","onClickRetryBtnJobsItem","renderJobItemLoadingView","renderJobItemFailureView","renderJobItemSuccessView","skills","href","company_website_url","GoLinkExternal","description","rederJobItemData","ProtectedRoute","Cookie","Route","_objectSpread","NotFoundRoute","App","Switch","exact","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.defce605.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass LoginRoute extends Component {\n  state = {userUserName: '', userPassword: '', iserror: false, errorMsg: ''}\n\n  onUserNameChange = event => {\n    this.setState({userUserName: event.target.value})\n  }\n\n  onUserPassChange = event => {\n    this.setState({userPassword: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    console.log(errorMsg)\n    this.setState({iserror: true, errorMsg})\n  }\n\n  onClickLogin = async event => {\n    event.preventDefault()\n    const {userUserName, userPassword} = this.state\n    const userDetails = {username: userUserName, password: userPassword}\n\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  render() {\n    const {userUserName, userPassword, iserror, errorMsg} = this.state\n\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"LoginRoute-bg\">\n        <div className=\"LoginRoute-card\">\n          <div className=\"LoginRoute-img-con\">\n            <img\n              alt=\"website logos\"\n              src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png \"\n            />\n          </div>\n          <form className=\"LoginRoute-form\">\n            <div className=\"LoginRoute-input-con\">\n              <label className=\"LoginRoute-label\" htmlFor=\"userName\">\n                USERNAME\n              </label>\n              <input\n                value={userUserName}\n                onChange={this.onUserNameChange}\n                className=\"LoginRoute-input\"\n                id=\"userName\"\n                placeholder=\"Username\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"LoginRoute-input-con\">\n              <label className=\"LoginRoute-label\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                value={userPassword}\n                onChange={this.onUserPassChange}\n                className=\"LoginRoute-input\"\n                id=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n            <div className=\"LoginRoute-btn-con\">\n              <button\n                onClick={this.onClickLogin}\n                className=\"LoginRoute-btn\"\n                type=\"submit\"\n              >\n                Login\n              </button>\n              {iserror && <p className=\"error-message\">*{errorMsg}</p>}\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginRoute\n","import {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport {IoMdHome} from 'react-icons/io'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n\n  return (\n    <ul className=\"header-container\">\n      <Link to=\"/\">\n        <li>\n          <img\n            className=\"header-logo\"\n            alt=\"website logos\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png \"\n          />\n        </li>\n      </Link>\n      <div className=\"hl\">\n        <li>\n          <Link className=\"header-links\" to=\"/\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link className=\"header-links\" to=\"/jobs\">\n            Jobs\n          </Link>\n        </li>\n\n        <div className=\"header-iconCon\">\n          <li>\n            <Link className=\"header-icons\" to=\"/\">\n              <IoMdHome />\n            </Link>\n          </li>\n          <li>\n            <Link className=\"header-icons\" to=\"/jobs\">\n              <BsBriefcaseFill />\n            </Link>\n          </li>\n        </div>\n      </div>\n      <div>\n        <button\n          onClick={onClickLogout}\n          type=\"button\"\n          className=\"LogoutRoute-btn\"\n        >\n          Logout\n        </button>\n        <button onClick={onClickLogout} type=\"button\" className=\"logout-icon\">\n          <FiLogOut /> LogOut\n        </button>\n      </div>\n    </ul>\n  )\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport Header from '../Header'\n\nimport './index.css'\n\nconst HomeRoute = () => (\n  <div className=\"home-contaner\">\n    <Header />\n    <div className=\"home-info-con\">\n      <h1 className=\"home-head\">Find The Job That Fits Your Life</h1>\n      <p className=\"home-para\">\n        Millions of people are searching for jobs, salary information, company\n        reviews. Find the job that fits your abilities and potential.\n      </p>\n      <Link to=\"/jobs\">\n        <button className=\"home-find-btn \" type=\"button\">\n          Find Jobs\n        </button>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default HomeRoute\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING',\n}\n\nclass GetProfileDeatilsCard extends Component {\n  state = {apiStatus: apiConstants.initial, profileData: ''}\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({apiStatus: apiConstants.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/profile'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    const formattedProfileDetails = {\n      name: data.profile_details.name,\n      profileImageUrl: data.profile_details.profile_image_url,\n      bio: data.profile_details.short_bio,\n    }\n\n    if (response.ok === true) {\n      this.setState({\n        apiStatus: apiConstants.success,\n        profileData: formattedProfileDetails,\n      })\n    } else if (response.status === 401) {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  onClickRetryBtn = () => {\n    this.getProfileDetails()\n  }\n\n  renderProfileLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderProfileFailureView = () => (\n    <div className=\"profile-failure-con\">\n      <button\n        onClick={this.onClickRetryBtn}\n        type=\"button\"\n        className=\"profile-failure-btn\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderProfileSuccessView = () => {\n    const {profileData} = this.state\n    const {name, profileImageUrl, bio} = profileData\n\n    return (\n      <div className=\"profile-card\">\n        <img className=\"profile-card-img\" alt=\"profile\" src={profileImageUrl} />\n        <h1 className=\"profile-card-head\">{name}</h1>\n        <p className=\"profile-card-para\">{bio}</p>\n      </div>\n    )\n  }\n\n  rederProfileData = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiConstants.loading:\n        return this.renderProfileLoadingView()\n      case apiConstants.failure:\n        return this.renderProfileFailureView()\n      case apiConstants.success:\n        return this.renderProfileSuccessView()\n\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div>{this.rederProfileData()}</div>\n  }\n}\n\nexport default GetProfileDeatilsCard\n","import {Link} from 'react-router-dom'\nimport {IoMdStar} from 'react-icons/io'\nimport {MdLocationOn} from 'react-icons/md'\nimport {FaShoppingBag} from 'react-icons/fa'\nimport './index.css'\n\nconst JobItem = props => {\n  const {jobData} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    title,\n    rating,\n    id,\n  } = jobData\n\n  return (\n    <Link to={`/jobs/${id}`} className=\"jobitem-link\">\n      <li className=\"jobitem-con\">\n        <div className=\"top-sec-job-item\">\n          <img\n            className=\"jobitem-logo\"\n            src={companyLogoUrl}\n            alt=\"job details company logo\"\n          />\n          <div>\n            <h1 className=\"jobitem-head\">{title}</h1>\n            <div className=\"jobitem-star-con\">\n              <IoMdStar className=\"star-icon\" />\n              <p className=\"jobitem-rating\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"job-item-container-2\">\n          <div className=\"jobitem-loc-sl-con\">\n            <div className=\"jobitem-job-loc-con\">\n              <MdLocationOn className=\"loc-in-icon\" />\n              <p>{location}</p>\n            </div>\n            <div className=\"jobitem-job-loc-con\">\n              <FaShoppingBag className=\"loc-in-icon\" />\n              <p>{employmentType}</p>\n            </div>\n          </div>\n          <div>{packagePerAnnum}</div>\n        </div>\n\n        <hr className=\"job-line\" />\n        <div>\n          <h1 className=\"jobitem-desc-head\">Description</h1>\n          <p className=\"jobitem-desc-para\">{jobDescription}</p>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default JobItem\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Header from '../Header'\nimport GetProfileDeatilsCard from '../GetProfileDeatilsCard'\n\nimport JobItem from '../JobItem'\n\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiConstants = {\n  initialjrr: 'INITIALJH',\n  successjrr: 'SUCCESSJH',\n  failurejrr: 'FAILUREJH',\n  loadingjrr: 'LOADINGJH',\n}\n\nconst GetEmploymentType = props => {\n  const {eachType, onCheckBoxReq} = props\n  const {label, employmentTypeId} = eachType\n\n  const onCheckBoxSel = () => {\n    onCheckBoxReq(employmentTypeId)\n  }\n\n  return (\n    <div className=\"checkbox-con\">\n      <input\n        onChange={onCheckBoxSel}\n        className=\"checkbox-input\"\n        type=\"checkbox\"\n        id={employmentTypeId}\n        value={employmentTypeId}\n      />\n      <label htmlFor={employmentTypeId}>{label}</label>\n    </div>\n  )\n}\n\nconst GetEmploymentSal = props => {\n  const {eachSaltype, onSalopReq} = props\n  const {label, salaryRangeId} = eachSaltype\n\n  const onSalOpClick = () => {\n    onSalopReq(salaryRangeId)\n  }\n\n  return (\n    <div className=\"checkbox-con\">\n      <input\n        onChange={onSalOpClick}\n        name=\"group1\"\n        className=\"checkbox-input\"\n        type=\"radio\"\n        id={salaryRangeId}\n        value={salaryRangeId}\n      />\n      <label htmlFor={salaryRangeId}>{label}</label>\n    </div>\n  )\n}\n\nclass JobsRoute extends Component {\n  state = {\n    jobsArray: '',\n    empType: [],\n    empSal: '',\n    search: '',\n    apiStatus: apiConstants.initialjrr,\n  }\n\n  componentDidMount() {\n    this.getJobsData()\n  }\n\n  onClickRetryBtnJobs = () => {\n    this.getJobsData()\n  }\n\n  getJobsData = async () => {\n    this.setState({apiStatus: apiConstants.loadingjrr})\n    const jwtToken = Cookies.get('jwt_token')\n    const {empType, empSal, search} = this.state\n    console.log(empSal)\n    const url = `https://apis.ccbp.in/jobs?employment_type=${empType.join()}&minimum_package=${empSal}&search=${search}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    const formattedJobsArray = data.jobs.map(eachJob => ({\n      companyLogoUrl: eachJob.company_logo_url,\n      employmentType: eachJob.employment_type,\n      jobDescription: eachJob.job_description,\n      location: eachJob.location,\n      packagePerAnnum: eachJob.package_per_annum,\n      title: eachJob.title,\n      rating: eachJob.rating,\n      id: eachJob.id,\n    }))\n\n    if (response.ok === true) {\n      this.setState({\n        apiStatus: apiConstants.successjrr,\n        jobsArray: formattedJobsArray,\n      })\n    } else if (response.status === 401) {\n      this.setState({apiStatus: apiConstants.failurejrr})\n    }\n  }\n\n  renderJobsSuccessView = () => {\n    const {jobsArray} = this.state\n\n    if (jobsArray.length === 0) {\n      return (\n        <div className=\"jobs-failue-con\">\n          <img\n            className=\"failue-img-jobs\"\n            src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n            alt=\"no jobs\"\n          />\n          <h1 className=\"job-failure-head\">No Jobs Found</h1>\n          <p className=\"job-failure-para\">\n            We could not find any jobs. Try other filters\n          </p>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"jobs-ul\">\n        {jobsArray.map(eachJob => (\n          <JobItem key={eachJob.id} jobData={eachJob} />\n        ))}\n      </ul>\n    )\n  }\n\n  getRenderView = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiConstants.loadingjrr:\n        return this.renderJobsLoadingView()\n      case apiConstants.failurejrr:\n        return this.renderJobsFailureView()\n      case apiConstants.successjrr:\n        return this.renderJobsSuccessView()\n\n      default:\n        return null\n    }\n  }\n\n  renderJobsLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobsFailureView = () => (\n    <div className=\"jobs-failue-con\">\n      <img\n        className=\"failue-img-jobs\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png \"\n        alt=\"failure view\"\n      />\n      <h1 className=\"job-failure-head\">Oups! Something Went Wrong</h1>\n      <p className=\"job-failure-para\">\n        We cannot seem to led the page you are looking for\n      </p>\n      <button\n        onClick={this.onClickRetryBtnJobs}\n        type=\"button\"\n        className=\"job-failure-btn\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  onClickSeacrButton = () => {\n    this.componentDidMount()\n  }\n\n  onSalopReq = opt => {\n    this.setState(\n      prevState => ({\n        empSal: opt,\n      }),\n      this.getJobsData,\n    )\n  }\n\n  onCheckBoxReq = id => {\n    const {empType} = this.state\n\n    if (empType.includes(id)) {\n      const filteredType = empType.filter(eacht => eacht !== id)\n\n      this.setState(prevState => {}, this.getJobsData)\n    } else {\n      empType.push(id)\n\n      this.setState(prevState => {}, this.getJobsData)\n    }\n  }\n\n  render() {\n    const {search} = this.state\n\n    return (\n      <>\n        <Header />\n        <div className=\"jobs-bg\">\n          <div>\n            <GetProfileDeatilsCard />\n\n            <hr className=\"jobs-lines\" />\n            <div>\n              <h1 className=\"tye-head\">Type of Employment</h1>\n              {employmentTypesList.map(eachEmplType => (\n                <GetEmploymentType\n                  key={eachEmplType.employmentTypeId}\n                  eachType={eachEmplType}\n                  onCheckBoxReq={this.onCheckBoxReq}\n                />\n              ))}\n            </div>\n            <hr className=\"jobs-lines\" />\n            <div>\n              <h1 className=\"tye-head\">Salary Range</h1>\n\n              {salaryRangesList.map(eachSaltype => (\n                <GetEmploymentSal\n                  key={eachSaltype.salaryRangeId}\n                  eachSaltype={eachSaltype}\n                  onSalopReq={this.onSalopReq}\n                />\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <div className=\"input-search-con\">\n              <input\n                onChange={this.onInputChange}\n                value={search}\n                placeholder=\"Search\"\n                type=\"search\"\n                className=\"input-saerch\"\n              />\n              <button\n                onClick={this.onClickSeacrButton}\n                className=\"saerch-btn\"\n                type=\"button\"\n                data-testid=\"searchButton\"\n              >\n                <BsSearch className=\"search-icon\" /> Search\n              </button>\n            </div>\n\n            <div className=\"main-con\">{this.getRenderView()}</div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default JobsRoute\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {IoMdStar} from 'react-icons/io'\nimport {MdLocationOn} from 'react-icons/md'\nimport {GoLinkExternal} from 'react-icons/go'\nimport {FaShoppingBag} from 'react-icons/fa'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport './index.css'\n\nconst GetSkill = props => {\n  const {eachSkill} = props\n  return (\n    <li className=\"skill-li\">\n      <img\n        className=\"skill-img\"\n        alt={eachSkill.name}\n        src={eachSkill.image_url}\n      />\n      <p>{eachSkill.name}</p>\n    </li>\n  )\n}\n\nconst GetSimilarJob = props => {\n  const {eachJob} = props\n\n  return (\n    <Link to={`/jobs/${eachJob.id}`} className=\"jobitem-link-similar\">\n      <li className=\"jobitem-con-skill\">\n        <div className=\"top-sec-job-item\">\n          <img\n            className=\"jobitem-logo\"\n            src={eachJob.company_logo_url}\n            alt=\"similar job company logo\"\n          />\n          <div>\n            <h1 className=\"jobitem-head\">{eachJob.title}</h1>\n            <div className=\"jobitem-star-con\">\n              <IoMdStar className=\"star-icon\" />\n              <p className=\"jobitem-rating\">{eachJob.rating}</p>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <p className=\"jobitem-desc-head\">Description</p>\n          <p className=\"jobitem-desc-para\">{eachJob.job_description}</p>\n        </div>\n        <hr className=\"job-line\" />\n        <div className=\"job-item-container-2\">\n          <div className=\"jobitem-loc-sl-con\">\n            <div className=\"jobitem-job-loc-con\">\n              <MdLocationOn className=\"loc-in-icon\" />\n              <p>{eachJob.location}</p>\n            </div>\n            <div className=\"jobitem-job-loc-con\">\n              <FaShoppingBag className=\"loc-in-icon\" />\n              <p>{eachJob.employment_type}</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nconst apiConstants = {\n  initialj: 'INITIALJob',\n  successj: 'SUCCESSJob',\n  failurej: 'FAILUREJob',\n  loadingj: 'LOADINGJob',\n}\n\nclass JobItemDetailsRoute extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    jobItemData: '',\n    similarJobs: '',\n    lifeAtComapany: '',\n  }\n\n  componentDidMount() {\n    this.getJobItemData()\n  }\n\n  getJobItemData = async () => {\n    this.setState({apiStatus: apiConstants.loadingj})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    console.log(id)\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n\n    if (response.ok === true) {\n      this.setState({\n        apiStatus: apiConstants.successj,\n        jobItemData: data.job_details,\n        similarJobs: data.similar_jobs,\n        lifeAtComapany: data.job_details.life_at_company,\n      })\n    } else if (response.status === 401) {\n      this.setState({apiStatus: apiConstants.failurej})\n    }\n  }\n\n  onClickRetryBtnJobsItem = () => {\n    this.getJobItemData()\n  }\n\n  renderJobItemLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobItemFailureView = () => (\n    <div className=\"jobs-failue-con\">\n      <img\n        className=\"failue-img-jobs\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png \"\n        alt=\"failure view\"\n      />\n      <h1 className=\"job-failure-head\">Oops! Something Went Wrong</h1>\n      <p className=\"job-failure-para\">\n        We cannot seem to find the page you are looking for\n      </p>\n      <button\n        onClick={this.onClickRetryBtnJobsItem}\n        type=\"button\"\n        className=\"job-failure-btn\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobItemSuccessView = () => {\n    const {jobItemData, similarJobs, lifeAtComapany} = this.state\n\n    const {skills} = jobItemData\n\n    return (\n      <>\n        <div className=\"jobs-item-bg\">\n          <li className=\"jobitem-con\">\n            <div className=\"top-sec-job-item\">\n              <img\n                className=\"jobitem-logo\"\n                src={jobItemData.company_logo_url}\n                alt=\"job details company logo\"\n              />\n              <div>\n                <h1 className=\"jobitem-head\">{jobItemData.title}</h1>\n                <div className=\"jobitem-star-con\">\n                  <IoMdStar className=\"star-icon\" />\n                  <p className=\"jobitem-rating\">{jobItemData.rating}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"job-item-container-2\">\n              <div className=\"jobitem-loc-sl-con\">\n                <div className=\"jobitem-job-loc-con\">\n                  <MdLocationOn className=\"loc-in-icon\" />\n                  <p>{jobItemData.location}</p>\n                </div>\n                <div className=\"jobitem-job-loc-con\">\n                  <FaShoppingBag className=\"loc-in-icon\" />\n                  <p>{jobItemData.employment_type}</p>\n                </div>\n              </div>\n              <div>{jobItemData.package_per_annum}</div>\n            </div>\n\n            <hr className=\"job-line\" />\n            <div>\n              <div className=\"Visit-lik-con\">\n                <p className=\"jobitem-desc-head\">Description</p>\n                <a\n                  className=\"visit-link\"\n                  href={jobItemData.company_website_url}\n                  target=\"blank\"\n                >\n                  Visit\n                  <GoLinkExternal />\n                </a>\n              </div>\n              <p className=\"jobitem-desc-para\">{jobItemData.job_description}</p>\n            </div>\n\n            <div>\n              <h1 className=\"skilss-head\">Skills</h1>\n              <ul className=\"ul-skill-con\">\n                {skills.map(eachSkill => (\n                  <GetSkill key={eachSkill.name} eachSkill={eachSkill} />\n                ))}\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"skilss-head\">Life at Company</h1>\n              <div className=\"life-at-com-con\">\n                <p>{lifeAtComapany.description}</p>\n                <img\n                  className=\"life-img\"\n                  src={lifeAtComapany.image_url}\n                  alt=\"life at company\"\n                />\n              </div>\n            </div>\n          </li>\n\n          <div>\n            <h1 className=\"skilss-head\">Similar Jobs</h1>\n            <ul className=\"ul-skill-con\">\n              {similarJobs.map(eachJob => (\n                <GetSimilarJob key={eachJob.id} eachJob={eachJob} />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  rederJobItemData = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiConstants.loadingj:\n        return this.renderJobItemLoadingView()\n      case apiConstants.failurej:\n        return this.renderJobItemFailureView()\n      case apiConstants.successj:\n        return this.renderJobItemSuccessView()\n\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {' '}\n        <Header />\n        <div className=\"jobs-item-bg\">{this.rederJobItemData()}</div>\n      </>\n    )\n  }\n}\n\nexport default JobItemDetailsRoute\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import './index.css'\n\nconst NotFoundRoute = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png \"\n      alt=\"not found\"\n      className=\"not-found-img\"\n    />\n    <h1>Page Not Founds</h1>\n    <p>We are sorry, the page you requested could not be found</p>\n  </div>\n)\n\nexport default NotFoundRoute\n","import {Route, Switch} from 'react-router-dom'\n\nimport LoginRoute from './components/LoginRoute'\nimport HomeRoute from './components/HomeRoute'\nimport JobsRoute from './components/JobsRoute'\nimport JobItemDetailsRoute from './components/JobItemDetailsRoute'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundRoute from './components/NotFoundRoute'\n\nimport './App.css'\n\n// These are the lists used in the application. You can move them to any component needed.\n\n// Replace your code here\nconst App = () => (\n  <>\n    <Switch>\n      <Route exact path=\"/login\" component={LoginRoute} />\n      <ProtectedRoute exact path=\"/\" component={HomeRoute} />\n      <ProtectedRoute exact path=\"/jobs\" component={JobsRoute} />\n      <ProtectedRoute path=\"/jobs/:id\" component={JobItemDetailsRoute} />\n      <Route component={NotFoundRoute} />\n    </Switch>\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}